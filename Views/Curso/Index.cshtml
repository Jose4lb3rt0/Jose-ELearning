@model IEnumerable<E_Platform.Models.Curso>

@{
    ViewData["Title"] = "Cursos";
}

<style>
    .hover-scale {
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .hover-scale:hover {
        transform: scale(1.05);
        box-shadow: 0px 4px 15px rgba(0, 0, 0, 0.2);
    }

    .text-decoration-none {
        text-decoration: none;
    }
</style>

<h1 class="text-center mt-4">@ViewData["Title"]</h1>

@if (User.Identity.IsAuthenticated && User.IsInRole("Administrador"))
{
        <p>
            <a asp-action="Create" class="btn btn-success mb-4">Crear Nuevo Curso</a>
        </p>
}

<div class="container">
    <div class="row">
        @foreach (var curso in Model)
        {
                <div class="col-md-4 mb-4">
                    <a onclick="loadCursoDetails(@curso.Id)" class="text-decoration-none">
                        <div class="card h-100 shadow-sm hover-scale">
                            <img src="https://picsum.photos/300?random=@curso.Id" class="card-img-top" alt="Imagen" style="height: 150px; object-fit: cover;" />
                            <div class="card-body">
                                <h5 class="card-title">@curso.Nombre</h5>
                                <p class="text-success mb-1">
                                @(curso.Activo ? "Activo" : "Inactivo")
                                </p>
                                <hr />
                                <p class="text-muted mb-3">
                                @curso.Instructor?.Name
                                </p>

                                <div class="d-flex justify-content-between">
                                    <p class="text-success small">
                                        <strong>Precio:</strong> @curso.Precio.ToString("") EstudiaCoins
                                    </p>
                                    <p class="text-muted small">
                                        <strong>Creado el:</strong> @curso.FechaCreacion.ToShortDateString()
                                    </p>
                                </div>

                            @if (User.Identity.IsAuthenticated)
                            {
                                        <div class="d-grid gap-2">
                                    @if (!User.IsInRole("Alumno") && ViewBag.Permisos.Contains("VerCurso"))
                                    {
                                                    <a class="btn btn-primary btn-block" onclick="loadCursoDetails(@curso.Id)">Detalles</a>
                                    }
                                    @if (ViewBag.Permisos.Contains("EditarCurso"))
                                    {
                                                    <a asp-action="Edit" asp-route-id="@curso.Id" class="btn btn-warning btn-block">Editar</a>
                                    }
                                    @if (ViewBag.Permisos.Contains("EliminarCurso"))
                                    {
                                                    <a asp-action="Delete" asp-route-id="@curso.Id" class="btn btn-danger btn-block">Eliminar</a>
                                    }
                                    @if (User.IsInRole("Alumno") && ViewBag.Permisos.Contains("VerCurso"))
                                    {
                                                    <a class="btn btn-dark btn-block" onclick="loadCursoDetails(@curso.Id)">Ver</a>
                                    }
                                        </div>
                            }
                            </div>
                        </div>
                    </a>
                </div>
        }
    </div>
</div>

<div class="modal fade" id="cursoDetailsModal" tabindex="-1" aria-labelledby="cursoDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="cursoDetailsModalLabel">Detalles del Curso</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="cursoDetailsContent"></div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="addLessonModal" tabindex="-1" aria-labelledby="addLessonModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addLessonModalLabel">Agregar Lección</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addLessonForm">
                    <input type="hidden" id="moduloId" name="moduloId" value="">
                    <div class="mb-3">
                        <label for="lessonName" class="form-label">Nombre de la Lección</label>
                        <input type="text" class="form-control" id="lessonName" name="lessonName" required>
                    </div>
                    <div class="mb-3">
                        <label for="lessonContent" class="form-label">Contenido</label>
                        <textarea class="form-control" id="lessonContent" name="lessonContent" rows="3"></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="lessonType" class="form-label">Tipo de Contenido</label>
                        <select class="form-select" id="lessonType" name="lessonType" required>
                            <option value="Texto">Texto</option>
                            <option value="Video">Video</option>
                            <option value="PDF">PDF</option>
                        </select>
                    </div>
                    <button type="submit" class="btn btn-primary">Guardar</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    function loadCursoDetails(cursoId) {
        $.ajax({
            url: `/Curso/Details/${cursoId}`,
            type: "GET",
            success: function (data) {
                console.log("Datos recibidos del servidor:", data);
                const { nombre, descripcion, instructor, objetivos, requisitos, modulos } = data;

                let content = `
                    <h5>${nombre}</h5>
                    <p>${descripcion}</p>
                    <p><strong>Instructor:</strong> ${instructor || "No asignado"}</p>

                    <h6>Objetivos</h5>
                    <ul class="list-group mt-2">
                `;

                if(objetivos && objetivos.length > 0){
                    objetivos.forEach(objetivo => {
                        content += `<li class="list-group-item">${objetivo}</li>`;
                    });
                }else{
                    content += `<li class="list-group-item">No hay objetivos disponibles</li>`;
                }

                content += `
                    </ul>
                    <h6 class="mt-3">Requisitos</h6>
                    <ul class="list-group mt-2 mb-3">
                `;

                if(requisitos && requisitos.length > 0){
                    requisitos.forEach(requisito => {
                        content += `<li class="list-group-item">${requisito}</li>`;
                    });
                }else{
                    content += `<li class="list-group-item">No hay requisitos disponibles</li>`;
                }

                content += `
                    </ul>

                    <h6>Módulos</h6>
                    <div class="accordion" id="modulosAccordion">
                `;

                if (modulos && modulos.length > 0) {
                    modulos.forEach((modulo, index) => {
                        console.log(modulo.lecciones);
                        content += `
                            <div class="d-flex align-items-start mb-3">
                                <!-- Accordion Item -->
                                <div class="flex-grow-1">

                                    <div class="accordion-item mb-2 shadow-sm">
                                        <h2 class="accordion-header" id="heading${index}">
                                            <button 
                                                class="accordion-button collapsed d-flex justify-content-between align-items-center bg-light border-0 shadow-sm" 
                                                type="button" 
                                                data-bs-toggle="collapse" 
                                                data-bs-target="#collapse${index}" 
                                                aria-expanded="false" 
                                                aria-controls="collapse${index}">
                                                <span class="fw-bold">${modulo.titulo}</span>
                                            </button>
                                        </h2>
                                        <div id="collapse${index}" class="accordion-collapse collapse" aria-labelledby="heading${index}" data-bs-parent="#modulosAccordion">
                                            <div class="accordion-body bg-white shadow-sm rounded">
                                                <p class="mb-0">${modulo.descripcion || "No hay descripción disponible."}</p>
                                                
                                                <!-- Lecciones del módulo -->
                                                <h6 class="mt-3">Lecciones</h6>
                                                <ul class="list-group mt-2">
                                            `;

                                            if (modulo.lecciones && modulo.lecciones.length > 0) {
                                                modulo.lecciones.forEach((leccion) => {
                                                    console.log("Lección recibida:", leccion);
                                                    content += `
                                                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                                                <span>${leccion.nombre}</span>
                                                            @if (ViewBag.Permisos.Contains("VerLecciones")){
                                                                <div>
                                                                    <a href="/Leccion/Details/${leccion.leccionID}" class="btn btn-dark btn-sm">
                                                                        <i class="fas fa-eye"></i>
                                                                    </a>
                                                                    @if (ViewBag.Permisos.Contains("GestionarLecciones")){
                                                                        <a href="/Leccion/Edit/${leccion.leccionID}" class="btn btn-dark btn-sm">
                                                                            <i class="fas fa-edit"></i>
                                                                        </a>
                                                                        <a href="/Leccion/Delete/${leccion.leccionID}" class="btn btn-dark btn-sm">
                                                                            <i class="fas fa-trash"></i>
                                                                        </a>
                                                                    }
                                                                </div>
                                                            }   
                                                            </li>
                                                    `;
                                                });
                                            } else {
                                                content += `<li class="list-group-item">No hay lecciones disponibles.</li>`;
                                            }

                                        content += `
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                @if (ViewBag.Permisos.Contains("GestionarModulos")){
                                    <!-- Action Buttons -->
                                    <div class="ms-3 d-flex flex-column align-items-center justify-content-center">
                                        <button 
                                            class="btn btn-outline-success btn-sm mb-2" 
                                            title="Agregar Lección"
                                            onclick="openAddLessonModal(${modulo.id})" // Ahora usa el ID
                                        >
                                            <i class="fa fa-plus"></i>
                                        </button>
                                        <button class="btn btn-outline-danger btn-sm mb-2" title="Eliminar">
                                            <i class="fa fa-trash"></i>
                                        </button>
                                        <button class="btn btn-outline-primary btn-sm mb-2" title="Editar">
                                            <i class="fa fa-edit"></i>
                                        </button>
                                    </div>
                                }
                            </div>
                        `;
                    });
                } else {
                    content += `<p>No hay módulos disponibles.</p>`;
                }

                content += `</div>`;

                $('#cursoDetailsContent').html(content);
                $('#cursoDetailsModal').modal('show');
            },
            error: function () {
                alert("No se pudieron cargar los detalles del curso.");
            }
        });
    }

    function openAddLessonModal(moduloId) {
        if (!moduloId) {
            console.error("ModuloId es undefined o null.");
            return;
        }
        document.getElementById("moduloId").value = moduloId;
        const modal = new bootstrap.Modal(document.getElementById("addLessonModal"));
        modal.show();
    }

    document.getElementById("addLessonForm").addEventListener("submit", function (e) {
        e.preventDefault();

        const moduloIdValue = parseInt(document.getElementById("moduloId").value, 10);
        if (isNaN(moduloIdValue)) {
            alert("El módulo ID no es válido.");
            return;
        }

        const formData = {
            moduloId: parseInt(document.getElementById("moduloId").value), // Asegúrate de que sea un número válido
            nombre: document.getElementById("lessonName").value.trim(),
            contenido: document.getElementById("lessonContent").value.trim(),
        };

        console.log("Payload enviado:", formData);

        fetch("/Leccion/AddLesson", {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify(formData),
        })
            .then((response) => response.json())
            .then((data) => {
                if (data.success) {
                    alert(data.message);
                    location.reload(); 
                } else {
                    console.error("Errores del servidor:", data.errors);
                    alert(data.message);
                }
            })
            .catch((error) => console.error("Error al agregar la lección:", error));
    });
</script>
